{"version":3,"sources":["components/iconComponent/Icon.jsx","components/Search/Search.jsx","components/portal/Portal.jsx","components/modal/Modal.jsx","components/filter/Filter.jsx","components/filters/Filters.jsx","components/foodCard/FoodCard.jsx","hooks/useFetch.js","const.js","helpers/uniqueID.js","components/randomRecipes/RandomRecipes.jsx","components/bottomNav/BottomNav.jsx","components/recipeCard/RecipeCard.jsx","components/similarRecipes/SimilarRecipes.jsx","pages/Home/Home.jsx","components/recipeHeader/RecipeHeader.jsx","pages/Recipe/Recipe.jsx","App.jsx","index.js"],"names":["path","process","concat","Icon","name","width","height","stroke","fill","onClick","className","style","color","defaultProps","Search","props","inputSearch","useRef","onSearch","current","value","type","placeholder","ref","portalRoot","document","querySelector","Portal","componentDidMount","appendChild","el","componentWillUnmount","removeChild","createElement","children","this","ReactDOM","createPortal","React","Component","Modal","toggle","active","title","xmlns","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","Filter","Filters","useState","setActive","FoodCard","data","image","to","src","alt","substr","useFetch","url","setData","isPending","setIsPending","error","setError","useEffect","a","fetch","res","ok","FetchError","status","statusText","json","err","getData","params","Error","captureStackTrace","constructor","jsonObj","proto","Object","getPrototypeOf","getOwnPropertyNames","key","descriptor","getOwnPropertyDescriptor","get","API_KEY","uniqueID","RandomRecipes","cards","setCards","recipes","map","BottomNav","RecipeCard","img","setImg","summary","setSummary","id","replace","SimilarRecipes","recipeCards","setRecipeCards","Home","query","console","log","RecipeHeader","Recipe","App","basename","render","location","TransitionGroup","CSSTransition","appear","timeout","enter","exit","classNames","exact","component","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c280be2c.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Icon.css\";\r\nimport \"external-svg-loader\";\r\n\r\nconst path = process.env.PUBLIC_URL.concat(\"/assets/icons/\");\r\n\r\n const Icon = ({name, width, height, stroke, fill, onClick}) => {\r\n    return (\r\n        <div className=\"icon\" onClick={onClick}>\r\n            <svg\r\n            data-src={`${path}${name}.svg`}\r\n            fill=\"currentColor\"\r\n            width={width}\r\n            height={height}\r\n            style={{\r\n               color:fill,\r\n               stroke\r\n            }}\r\n            >\r\n            </svg>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nIcon.defaultProps={\r\n    width:\"1.6em\",\r\n    height:\"1.6em\",\r\n    stroke:\"#fff\",\r\n    fill:\"transparent\"\r\n}\r\n\r\nexport default Icon;\r\n","import React, { Fragment, useRef } from 'react';\r\nimport Icon from '../iconComponent/Icon';\r\nimport './Search.css';\r\n\r\nconst Search = (props) => {\r\n    const inputSearch = useRef(null);\r\n\r\n    const handleClick = () => {\r\n        props.onSearch(inputSearch.current.value);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button className=\"Search-btn\" onClick={handleClick}>\r\n               <Icon className=\"Search-btn--icon\" name=\"search\" width=\"25\" height=\"25\" fill=\"transparent\" stroke=\"#fff\"></Icon>\r\n            </button>\r\n            <input className=\"Search-input\" type=\"text\" placeholder=\"Search\" ref={inputSearch} />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst portalRoot = document.querySelector('#portal');\r\n\r\nclass Portal extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        portalRoot.appendChild(this.el);\r\n    }\r\n    \r\n    componentWillUnmount = () => {\r\n        portalRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        \r\n        return ReactDOM.createPortal(children, this.el);\r\n    }\r\n}\r\n\r\nexport default Portal;","import React from 'react';\r\nimport './Modal.css';\r\n\r\nimport Portal from '../portal/Portal';\r\n\r\n/*\r\n    Documentation about this component.\r\n    In the component where you are going to use the Modal component, copy and paste this code:\r\n    \r\n    const [ active, setActive ] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setActive(!active);\r\n    }\r\n\r\n    And add to the button that activates the Modal, this event:\r\n\r\n    onClick={toggle}\r\n\r\n    Good, and finally you add these properties to the Modal component: \r\n\r\n    <Modal active={active} toggle={toggle} title=\"Here is the title of your modal\" height=\"Here is the height of your modal\">\r\n        <p>Here is the content of your modal.</p>\r\n    </Modal>\r\n*/\r\n\r\nclass Modal extends React.Component {\r\n    render() {\r\n        const { children, toggle, active, title, height } = this.props;\r\n\r\n        return (\r\n            <Portal>\r\n                {active && (\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"window\" style={{\r\n                            height: height + 'px',\r\n                        }}>\r\n                            <div className=\"window-header\">\r\n                                <button className=\"closeBtn\" onClick={toggle}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-x\" width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#282828\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\r\n                                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\r\n                                    </svg>\r\n                                </button>\r\n                                <h1>{title}</h1>\r\n                                <hr />\r\n                            </div>\r\n                            <div>{children}</div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Fragment } from 'react';\r\nimport './Filter.css';\r\n\r\nconst Filter = () => {\r\n    return (\r\n        <Fragment>\r\n            This is a filter\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React, { useState, Fragment } from 'react';\r\nimport './Filters.css';\r\n\r\nimport Icon from '../iconComponent/Icon';\r\nimport Modal from '../modal/Modal';\r\nimport Filter from '../filter/Filter';\r\n\r\nconst Filters = () => {\r\n    const [ active, setActive ] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setActive(!active);\r\n    }\r\n\r\n    /* \r\n        maxReadyTime -> number 20 The maximum time in minutes it should take to prepare and cook the recipe.\r\n        minCalories\t-> number 50 The minimum amount of calories the recipe must have.\r\n        maxCalories -> number 800 The maximum amount of calories the recipe can have.\r\n        minFat -> number 1 The minimum amount of fat in grams the recipe must have.\r\n        maxFat -> number 100 The maximum amount of fat in grams the recipe can have.\r\n        minCarbs -> number\t10\tThe minimum amount of carbohydrates in grams the recipe must have.\r\n        maxCarbs -> number\t100\tThe maximum amount of carbohydrates in grams the recipe can have.\r\n        number -> number\t10\tThe number of expected results (between 1 and 100).\r\n    */\r\n\r\n    return (\r\n        <Fragment>\r\n            <button className=\"filtersBtn\" onClick={toggle}>\r\n                <Icon name=\"filter\" width=\"25\" height=\"25\" fill=\"transparent\" stroke=\"#fff\"></Icon>\r\n            </button>\r\n\r\n            <Modal active={active} toggle={toggle} title=\"Filters\" height=\"330\">\r\n                <div className=\"filters\">\r\n                    <Filter />\r\n                </div>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Filters;","import React from 'react'\r\nimport './FoodCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FoodCard = ({data}) => {\r\n    const { title, image } = data;\r\n\r\n    return (\r\n        <Link to=\"/recipe\" >\r\n            <div className=\"Food-Card\">\r\n                <img className=\"Food-Card--img\" src={image} alt={title} />\r\n                <div className=\"Food-Card--title\">\r\n                    <h2>{`${title.substr(0,55)}..`}</h2>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default FoodCard;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetch(url) {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            try {\r\n                const res = await fetch(url);\r\n                if (!res.ok) {\r\n                    /* eslint-disable-next-line no-throw-literal */\r\n                    throw new FetchError({\r\n                        //err: true, //promoted as getter\r\n                        status: res.status,\r\n                        statusText: res.statusText\r\n                            ? res.statusText\r\n                            : \"An error has ocurred\",\r\n                    });\r\n                }\r\n                const data = await res.json();\r\n\r\n                setData(data);\r\n                setIsPending(false);\r\n                setError({ err: false });\r\n            } catch (e) {\r\n                setError(e);\r\n                setIsPending(true);\r\n            }\r\n        }\r\n        getData();\r\n    }, [url]);\r\n\r\n    return {\r\n        data,\r\n        isPending,\r\n        error,\r\n    };\r\n}\r\n\r\n/**\r\n * Represents an inmutable HTTP remote fetch error.\r\n * It could act as base class of other more specific.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\r\n */\r\nexport class FetchError extends Error {\r\n    // as private fields (encapsulation)\r\n    #status;\r\n    #statusText;\r\n\r\n    constructor({ status, statusText }, ...params) {\r\n        // provide toString() message and\r\n        // pass remaining arguments (including vendor specific ones) to parent constructor\r\n        super(`E${status}: ${statusText}`, ...params);\r\n\r\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, FetchError);\r\n        }\r\n\r\n        this.#status = status;\r\n        this.#statusText = statusText;\r\n    }\r\n\r\n    /**\r\n     * The inmutable name error itself with extensibility support.\r\n     * ex. Eg in this context: `FetchError`.\r\n     * @return string\r\n     */\r\n    get name() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    /**\r\n     * Converts this class instances to JSON string.\r\n     * `JSON.stringify()` calls this mixin when marshalling to JSON.\r\n     * @return string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\r\n     */\r\n    toJSON(/*key*/) {\r\n        // start with an empty object\r\n        const jsonObj = {};\r\n        // or emit all properties and all fields\r\n        //        const jsonObj = Object.assign({}, this);\r\n\r\n        // add all getter properties\r\n        const proto = Object.getPrototypeOf(this);\r\n        for (const key of Object.getOwnPropertyNames(proto)) {\r\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\r\n            const hasGetter =\r\n                descriptor && typeof descriptor.get === \"function\";\r\n            if (hasGetter) {\r\n                jsonObj[key] = descriptor.get();\r\n            }\r\n        }\r\n\r\n        return jsonObj;\r\n    }\r\n\r\n    /**\r\n     * An exportable JSON mark. Always true.\r\n     * @return bool\r\n     */\r\n    get error() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Property with the HTTP response status code.\r\n     * @return number\r\n     */\r\n    get status() {\r\n        return this.#status;\r\n    }\r\n\r\n    /**\r\n     * Property with the HTTP response status message.\r\n     * @return number\r\n     */\r\n    get statusText() {\r\n        return this.#statusText;\r\n    }\r\n}\r\n","export const API_KEY = \"7cff3793d3024c2b94b14bebaf10a454\";","let current = 0;\r\nexport default function uniqueID() {\r\n    return ++current;\r\n}","import React, { Fragment, useEffect, useState } from 'react'\r\nimport FoodCard from '../foodCard/FoodCard';\r\nimport './RandomRecipes.css';\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {API_KEY} from \"../../const\";\r\nimport uniqueID from '../../helpers/uniqueID';\r\n\r\nconst RandomRecipes = () => {\r\n    const { data, isPending } = useFetch(`https://api.spoonacular.com/recipes/random?apiKey=${API_KEY}&number=5&tags=vegetarian,dessert`);\r\n    \r\n    const [ cards , setCards ] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(!isPending){\r\n            const cards = data.recipes.map(data => {\r\n                return <FoodCard key={uniqueID()} data={data} />\r\n            });\r\n            setCards(cards);\r\n        }\r\n    },[isPending,data])\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"Random-Recipe-title\">Random</h1>\r\n            <div className=\"Random-Recipe--trending-foods\">\r\n                {cards}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default RandomRecipes;\r\n","import React from 'react';\r\nimport Icon from '../iconComponent/Icon.jsx';\r\nimport \"./BottomNav.css\";\r\n\r\n\r\n\r\nexport default function BottomNav() {\r\n    return (\r\n        <nav className=\"bottomnav\" >\r\n            <ul>\r\n                <li>\r\n                    <Icon name=\"home\"   fill=\"var(--bg-secundary)\"/>\r\n                </li>\r\n            \r\n                <li>\r\n                     <Icon name=\"cutlery\"  fill=\"#666\"/>\r\n                </li>\r\n\r\n                <li>\r\n                     <Icon name=\"user\"  fill=\"#666\"/>\r\n                </li>\r\n                <li>\r\n                     <Icon name=\"recipes\"  fill=\"#666\"/>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './RecipeCard.css';\r\n\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {API_KEY} from \"../../const\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RecipeCard = (props) => {\r\n    const [ img, setImg ] = useState('');\r\n    const [ summary, setSummary ] = useState('');\r\n    const { data, isPending } = useFetch(`https://api.spoonacular.com/recipes/${props.id}/information?apiKey=${API_KEY}`);\r\n\r\n    useEffect(() => { \r\n        !isPending ? setImg(data.image) : setImg('https://spoonacular.com/recipeImages/716429-556x370.jpg')\r\n        \r\n        !isPending ? setSummary(data.summary.replace(/(&nbsp;|<([^>]+)>)/ig, \"\")) : setSummary('No summary')\r\n    }, [isPending, data] );\r\n\r\n    return (\r\n        <Link to='/recipe' className=\"Recipe-Card--Link\">\r\n            <article className=\"Recipe-Card\">\r\n                <div className=\"Recipe-Card--recipeImage\">\r\n                    <img className=\"recipeImage\" src={img} alt=\"recipe\" />\r\n                </div>\r\n                <div className=\"Recipe-Card--recipeContent\">\r\n                    <h2>{props.title.substr(0,50)+'..'}</h2>\r\n                    <p>{`${summary.substr(0,55)}...`}</p>\r\n                </div>\r\n            </article>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default RecipeCard;","import React, { Fragment, useEffect, useState } from 'react';\r\nimport './SimilarRecipes.css';\r\n\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {API_KEY} from \"../../const\";\r\nimport uniqueID from '../../helpers/uniqueID';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport RecipeCard from '../recipeCard/RecipeCard';\r\n\r\nconst SimilarRecipes = (props) => {\r\n    const { data, isPending } = useFetch(`https://api.spoonacular.com/recipes/${props.id}/similar?apiKey=${API_KEY}&number=4`); \r\n    const [ recipeCards, setRecipeCards ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(!isPending){\r\n            const recipeCards = data.map(data => {\r\n                return <RecipeCard key={uniqueID()} id={data.id} title={data.title} />\r\n            });\r\n            setRecipeCards(recipeCards);\r\n        }\r\n    }, [isPending, data]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"similar-recipes\">\r\n                <h1 className=\"similiar-recipes--h1\">It may interest you</h1>\r\n            </div>\r\n            <div className=\"similar-recipes--recipes\">\r\n                {recipeCards}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SimilarRecipes;","import React, { Fragment } from 'react';\r\nimport './Home.css';\r\n\r\nimport Search from '../../components/Search/Search';\r\nimport Filters from '../../components/filters/Filters'; \r\nimport RandomRecipes from '../../components/randomRecipes/RandomRecipes';\r\nimport BottomNav from '../../components/bottomNav/BottomNav';\r\nimport SimilarRecipes from '../../components/similarRecipes/SimilarRecipes';\r\n\r\nconst Home = () => {\r\n    const onSearch = (query) => {\r\n        console.log(query);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <header>\r\n                <div className=\"header-search\">\r\n                    <Search onSearch={onSearch} />\r\n                </div>\r\n                <Filters />\r\n            </header>\r\n            <main>\r\n                <article className=\"main-random\">\r\n                    <RandomRecipes />\r\n                </article>\r\n                <article className=\"main-similar\">\r\n                    <SimilarRecipes id=\"209128\" />\r\n                </article>\r\n            </main>\r\n            <BottomNav></BottomNav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './RecipeHeader.css';\r\n\r\nconst RecipeHeader = () => {\r\n    return (\r\n        <div>\r\n            Recipe Header\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeHeader;","import React, { Fragment } from 'react';\r\nimport './Recipe.css';\r\n\r\nimport RecipeHeader from '../../components/recipeHeader/RecipeHeader';\r\n\r\nconst Recipe = () => {\r\n    return (\r\n        <Fragment>\r\n            <header>\r\n                <RecipeHeader />\r\n            </header>\r\n            <main>\r\n\r\n            </main>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport './css/App.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport Home from './pages/Home/Home';\r\nimport Recipe from './pages/Recipe/Recipe';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL} >\r\n      <Route render={({ location }) => (\r\n        <TransitionGroup className=\"container\">\r\n          <CSSTransition appear={true} key={location.key} timeout={{ enter: 400, exit: 200 }} classNames=\"fade\">\r\n            <div className=\"inner\">\r\n              <Switch key={location.key} location={location}>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/recipe\" component={Recipe} />\r\n              </Switch>\r\n            </div>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      )} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}